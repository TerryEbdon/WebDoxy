/**
 * @file
 * @author      Terry Ebdon
 * @date        31-JUL-2020
 * @copyright
 * Copyright (c) Terry Ebdon.
 * Licensed under the Apache License 2.0
 */

plugins {
  id 'groovy'
  id 'codenarc'
  id 'application'  // support for building a CLI application.
  id 'jacoco'       // Instrument build & add coverage reporting tasks
}

sourceSets {
  main {
    groovy.srcDirs = ['src']
    resources {
      // srcDir 'resources'
      srcDir 'src/resources'
      include '**/*.properties'
      include '**/*.xml'
    }
  }

  test {
    groovy.srcDirs = ['srcTest']
  }
}

codenarc {
  configFile = file("$rootDir/config/codenarc/codenarc-basic.groovy")
  ignoreFailures = true
}

codenarcMain {
}

codenarcTest {
}

repositories {
  // You can declare any Maven/Ivy/file repository here.
  mavenCentral()
}

dependencies {
  implementation 'org.apache.groovy:groovy-all:4.0.4'

  final String log4jVersion = '2.19.0'

  implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  implementation "org.apache.logging.log4j:log4j-jcl:${log4jVersion}"

  testImplementation("org.junit.jupiter:junit-jupiter-api:5.1.0")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.1.0")
  testCompileOnly("junit:junit:4.12")
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.1.0")
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport // Always report after testing
}

jacocoTestReport {
    dependsOn test // Run tests before generating report
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      element  = 'CLASS'
      includes = ['net.ebdon.webdoxy.Resource']
      limit {
        counter = 'LINE'
        value   = 'COVEREDRATIO'
        minimum = 1.0
      }
    }
    rule {
      element  = 'CLASS'
      includes = ['net.ebdon.webdoxy.Backup']
      limit {
        counter = 'LINE'
        value   = 'COVEREDRATIO'
        minimum = 0.8
      }
    }
  }
}

application {
  mainClassName = 'net.ebdon.webdoxy.WebDoxy'
}

run {
	standardInput = System.in
}
